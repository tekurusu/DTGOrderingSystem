//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by SlSvcUtil, version 5.0.61118.0
// 
namespace RBOS_WCF
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/RBOS_WCF")]
    public partial class CompositeType : object
    {
        
        private bool BoolValueField;
        
        private string StringValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue
        {
            get
            {
                return this.BoolValueField;
            }
            set
            {
                this.BoolValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue
        {
            get
            {
                return this.StringValueField;
            }
            set
            {
                this.StringValueField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IService1")]
public interface IService1
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
    System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState);
    
    string EndGetData(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
    System.IAsyncResult BeginGetDataUsingDataContract(RBOS_WCF.CompositeType composite, System.AsyncCallback callback, object asyncState);
    
    RBOS_WCF.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/sendOrder", ReplyAction="http://tempuri.org/IService1/sendOrderResponse")]
    System.IAsyncResult BeginsendOrder(string Order, bool replacement, string orderedItems, System.AsyncCallback callback, object asyncState);
    
    string EndsendOrder(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/copyCategories", ReplyAction="http://tempuri.org/IService1/copyCategoriesResponse")]
    System.IAsyncResult BegincopyCategories(string category, System.AsyncCallback callback, object asyncState);
    
    void EndcopyCategories(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/copyItems", ReplyAction="http://tempuri.org/IService1/copyItemsResponse")]
    System.IAsyncResult BegincopyItems(string items, System.AsyncCallback callback, object asyncState);
    
    void EndcopyItems(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getAllItems", ReplyAction="http://tempuri.org/IService1/getAllItemsResponse")]
    System.IAsyncResult BegingetAllItems(System.AsyncCallback callback, object asyncState);
    
    string EndgetAllItems(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getAllCategories", ReplyAction="http://tempuri.org/IService1/getAllCategoriesResponse")]
    System.IAsyncResult BegingetAllCategories(System.AsyncCallback callback, object asyncState);
    
    string EndgetAllCategories(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IService1Channel : IService1, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public RBOS_WCF.CompositeType Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((RBOS_WCF.CompositeType)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class sendOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public sendOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class getAllItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public getAllItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class getAllCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public getAllCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class Service1Client : System.ServiceModel.ClientBase<IService1>, IService1
{
    
    private BeginOperationDelegate onBeginGetDataDelegate;
    
    private EndOperationDelegate onEndGetDataDelegate;
    
    private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetDataUsingDataContractDelegate;
    
    private EndOperationDelegate onEndGetDataUsingDataContractDelegate;
    
    private System.Threading.SendOrPostCallback onGetDataUsingDataContractCompletedDelegate;
    
    private BeginOperationDelegate onBeginsendOrderDelegate;
    
    private EndOperationDelegate onEndsendOrderDelegate;
    
    private System.Threading.SendOrPostCallback onsendOrderCompletedDelegate;
    
    private BeginOperationDelegate onBegincopyCategoriesDelegate;
    
    private EndOperationDelegate onEndcopyCategoriesDelegate;
    
    private System.Threading.SendOrPostCallback oncopyCategoriesCompletedDelegate;
    
    private BeginOperationDelegate onBegincopyItemsDelegate;
    
    private EndOperationDelegate onEndcopyItemsDelegate;
    
    private System.Threading.SendOrPostCallback oncopyItemsCompletedDelegate;
    
    private BeginOperationDelegate onBegingetAllItemsDelegate;
    
    private EndOperationDelegate onEndgetAllItemsDelegate;
    
    private System.Threading.SendOrPostCallback ongetAllItemsCompletedDelegate;
    
    private BeginOperationDelegate onBegingetAllCategoriesDelegate;
    
    private EndOperationDelegate onEndgetAllCategoriesDelegate;
    
    private System.Threading.SendOrPostCallback ongetAllCategoriesCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public Service1Client()
    {
    }
    
    public Service1Client(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public Service1Client(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;
    
    public event System.EventHandler<GetDataUsingDataContractCompletedEventArgs> GetDataUsingDataContractCompleted;
    
    public event System.EventHandler<sendOrderCompletedEventArgs> sendOrderCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> copyCategoriesCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> copyItemsCompleted;
    
    public event System.EventHandler<getAllItemsCompletedEventArgs> getAllItemsCompleted;
    
    public event System.EventHandler<getAllCategoriesCompletedEventArgs> getAllCategoriesCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IService1.BeginGetData(int value, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetData(value, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IService1.EndGetData(System.IAsyncResult result)
    {
        return base.Channel.EndGetData(result);
    }
    
    private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int value = ((int)(inValues[0]));
        return ((IService1)(this)).BeginGetData(value, callback, asyncState);
    }
    
    private object[] OnEndGetData(System.IAsyncResult result)
    {
        string retVal = ((IService1)(this)).EndGetData(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetDataCompleted(object state)
    {
        if ((this.GetDataCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetDataAsync(int value)
    {
        this.GetDataAsync(value, null);
    }
    
    public void GetDataAsync(int value, object userState)
    {
        if ((this.onBeginGetDataDelegate == null))
        {
            this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
        }
        if ((this.onEndGetDataDelegate == null))
        {
            this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
        }
        if ((this.onGetDataCompletedDelegate == null))
        {
            this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
        }
        base.InvokeAsync(this.onBeginGetDataDelegate, new object[] {
                    value}, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IService1.BeginGetDataUsingDataContract(RBOS_WCF.CompositeType composite, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetDataUsingDataContract(composite, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    RBOS_WCF.CompositeType IService1.EndGetDataUsingDataContract(System.IAsyncResult result)
    {
        return base.Channel.EndGetDataUsingDataContract(result);
    }
    
    private System.IAsyncResult OnBeginGetDataUsingDataContract(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        RBOS_WCF.CompositeType composite = ((RBOS_WCF.CompositeType)(inValues[0]));
        return ((IService1)(this)).BeginGetDataUsingDataContract(composite, callback, asyncState);
    }
    
    private object[] OnEndGetDataUsingDataContract(System.IAsyncResult result)
    {
        RBOS_WCF.CompositeType retVal = ((IService1)(this)).EndGetDataUsingDataContract(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetDataUsingDataContractCompleted(object state)
    {
        if ((this.GetDataUsingDataContractCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetDataUsingDataContractAsync(RBOS_WCF.CompositeType composite)
    {
        this.GetDataUsingDataContractAsync(composite, null);
    }
    
    public void GetDataUsingDataContractAsync(RBOS_WCF.CompositeType composite, object userState)
    {
        if ((this.onBeginGetDataUsingDataContractDelegate == null))
        {
            this.onBeginGetDataUsingDataContractDelegate = new BeginOperationDelegate(this.OnBeginGetDataUsingDataContract);
        }
        if ((this.onEndGetDataUsingDataContractDelegate == null))
        {
            this.onEndGetDataUsingDataContractDelegate = new EndOperationDelegate(this.OnEndGetDataUsingDataContract);
        }
        if ((this.onGetDataUsingDataContractCompletedDelegate == null))
        {
            this.onGetDataUsingDataContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractCompleted);
        }
        base.InvokeAsync(this.onBeginGetDataUsingDataContractDelegate, new object[] {
                    composite}, this.onEndGetDataUsingDataContractDelegate, this.onGetDataUsingDataContractCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IService1.BeginsendOrder(string Order, bool replacement, string orderedItems, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginsendOrder(Order, replacement, orderedItems, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IService1.EndsendOrder(System.IAsyncResult result)
    {
        return base.Channel.EndsendOrder(result);
    }
    
    private System.IAsyncResult OnBeginsendOrder(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string Order = ((string)(inValues[0]));
        bool replacement = ((bool)(inValues[1]));
        string orderedItems = ((string)(inValues[2]));
        return ((IService1)(this)).BeginsendOrder(Order, replacement, orderedItems, callback, asyncState);
    }
    
    private object[] OnEndsendOrder(System.IAsyncResult result)
    {
        string retVal = ((IService1)(this)).EndsendOrder(result);
        return new object[] {
                retVal};
    }
    
    private void OnsendOrderCompleted(object state)
    {
        if ((this.sendOrderCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.sendOrderCompleted(this, new sendOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void sendOrderAsync(string Order, bool replacement, string orderedItems)
    {
        this.sendOrderAsync(Order, replacement, orderedItems, null);
    }
    
    public void sendOrderAsync(string Order, bool replacement, string orderedItems, object userState)
    {
        if ((this.onBeginsendOrderDelegate == null))
        {
            this.onBeginsendOrderDelegate = new BeginOperationDelegate(this.OnBeginsendOrder);
        }
        if ((this.onEndsendOrderDelegate == null))
        {
            this.onEndsendOrderDelegate = new EndOperationDelegate(this.OnEndsendOrder);
        }
        if ((this.onsendOrderCompletedDelegate == null))
        {
            this.onsendOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsendOrderCompleted);
        }
        base.InvokeAsync(this.onBeginsendOrderDelegate, new object[] {
                    Order,
                    replacement,
                    orderedItems}, this.onEndsendOrderDelegate, this.onsendOrderCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IService1.BegincopyCategories(string category, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BegincopyCategories(category, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    void IService1.EndcopyCategories(System.IAsyncResult result)
    {
        base.Channel.EndcopyCategories(result);
    }
    
    private System.IAsyncResult OnBegincopyCategories(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string category = ((string)(inValues[0]));
        return ((IService1)(this)).BegincopyCategories(category, callback, asyncState);
    }
    
    private object[] OnEndcopyCategories(System.IAsyncResult result)
    {
        ((IService1)(this)).EndcopyCategories(result);
        return null;
    }
    
    private void OncopyCategoriesCompleted(object state)
    {
        if ((this.copyCategoriesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.copyCategoriesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void copyCategoriesAsync(string category)
    {
        this.copyCategoriesAsync(category, null);
    }
    
    public void copyCategoriesAsync(string category, object userState)
    {
        if ((this.onBegincopyCategoriesDelegate == null))
        {
            this.onBegincopyCategoriesDelegate = new BeginOperationDelegate(this.OnBegincopyCategories);
        }
        if ((this.onEndcopyCategoriesDelegate == null))
        {
            this.onEndcopyCategoriesDelegate = new EndOperationDelegate(this.OnEndcopyCategories);
        }
        if ((this.oncopyCategoriesCompletedDelegate == null))
        {
            this.oncopyCategoriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OncopyCategoriesCompleted);
        }
        base.InvokeAsync(this.onBegincopyCategoriesDelegate, new object[] {
                    category}, this.onEndcopyCategoriesDelegate, this.oncopyCategoriesCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IService1.BegincopyItems(string items, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BegincopyItems(items, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    void IService1.EndcopyItems(System.IAsyncResult result)
    {
        base.Channel.EndcopyItems(result);
    }
    
    private System.IAsyncResult OnBegincopyItems(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string items = ((string)(inValues[0]));
        return ((IService1)(this)).BegincopyItems(items, callback, asyncState);
    }
    
    private object[] OnEndcopyItems(System.IAsyncResult result)
    {
        ((IService1)(this)).EndcopyItems(result);
        return null;
    }
    
    private void OncopyItemsCompleted(object state)
    {
        if ((this.copyItemsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.copyItemsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void copyItemsAsync(string items)
    {
        this.copyItemsAsync(items, null);
    }
    
    public void copyItemsAsync(string items, object userState)
    {
        if ((this.onBegincopyItemsDelegate == null))
        {
            this.onBegincopyItemsDelegate = new BeginOperationDelegate(this.OnBegincopyItems);
        }
        if ((this.onEndcopyItemsDelegate == null))
        {
            this.onEndcopyItemsDelegate = new EndOperationDelegate(this.OnEndcopyItems);
        }
        if ((this.oncopyItemsCompletedDelegate == null))
        {
            this.oncopyItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OncopyItemsCompleted);
        }
        base.InvokeAsync(this.onBegincopyItemsDelegate, new object[] {
                    items}, this.onEndcopyItemsDelegate, this.oncopyItemsCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IService1.BegingetAllItems(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BegingetAllItems(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IService1.EndgetAllItems(System.IAsyncResult result)
    {
        return base.Channel.EndgetAllItems(result);
    }
    
    private System.IAsyncResult OnBegingetAllItems(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IService1)(this)).BegingetAllItems(callback, asyncState);
    }
    
    private object[] OnEndgetAllItems(System.IAsyncResult result)
    {
        string retVal = ((IService1)(this)).EndgetAllItems(result);
        return new object[] {
                retVal};
    }
    
    private void OngetAllItemsCompleted(object state)
    {
        if ((this.getAllItemsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.getAllItemsCompleted(this, new getAllItemsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void getAllItemsAsync()
    {
        this.getAllItemsAsync(null);
    }
    
    public void getAllItemsAsync(object userState)
    {
        if ((this.onBegingetAllItemsDelegate == null))
        {
            this.onBegingetAllItemsDelegate = new BeginOperationDelegate(this.OnBegingetAllItems);
        }
        if ((this.onEndgetAllItemsDelegate == null))
        {
            this.onEndgetAllItemsDelegate = new EndOperationDelegate(this.OnEndgetAllItems);
        }
        if ((this.ongetAllItemsCompletedDelegate == null))
        {
            this.ongetAllItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAllItemsCompleted);
        }
        base.InvokeAsync(this.onBegingetAllItemsDelegate, null, this.onEndgetAllItemsDelegate, this.ongetAllItemsCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IService1.BegingetAllCategories(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BegingetAllCategories(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IService1.EndgetAllCategories(System.IAsyncResult result)
    {
        return base.Channel.EndgetAllCategories(result);
    }
    
    private System.IAsyncResult OnBegingetAllCategories(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IService1)(this)).BegingetAllCategories(callback, asyncState);
    }
    
    private object[] OnEndgetAllCategories(System.IAsyncResult result)
    {
        string retVal = ((IService1)(this)).EndgetAllCategories(result);
        return new object[] {
                retVal};
    }
    
    private void OngetAllCategoriesCompleted(object state)
    {
        if ((this.getAllCategoriesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.getAllCategoriesCompleted(this, new getAllCategoriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void getAllCategoriesAsync()
    {
        this.getAllCategoriesAsync(null);
    }
    
    public void getAllCategoriesAsync(object userState)
    {
        if ((this.onBegingetAllCategoriesDelegate == null))
        {
            this.onBegingetAllCategoriesDelegate = new BeginOperationDelegate(this.OnBegingetAllCategories);
        }
        if ((this.onEndgetAllCategoriesDelegate == null))
        {
            this.onEndgetAllCategoriesDelegate = new EndOperationDelegate(this.OnEndgetAllCategories);
        }
        if ((this.ongetAllCategoriesCompletedDelegate == null))
        {
            this.ongetAllCategoriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAllCategoriesCompleted);
        }
        base.InvokeAsync(this.onBegingetAllCategoriesDelegate, null, this.onEndgetAllCategoriesDelegate, this.ongetAllCategoriesCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override IService1 CreateChannel()
    {
        return new Service1ClientChannel(this);
    }
    
    private class Service1ClientChannel : ChannelBase<IService1>, IService1
    {
        
        public Service1ClientChannel(System.ServiceModel.ClientBase<IService1> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = value;
            System.IAsyncResult _result = base.BeginInvoke("GetData", _args, callback, asyncState);
            return _result;
        }
        
        public string EndGetData(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("GetData", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetDataUsingDataContract(RBOS_WCF.CompositeType composite, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = composite;
            System.IAsyncResult _result = base.BeginInvoke("GetDataUsingDataContract", _args, callback, asyncState);
            return _result;
        }
        
        public RBOS_WCF.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            RBOS_WCF.CompositeType _result = ((RBOS_WCF.CompositeType)(base.EndInvoke("GetDataUsingDataContract", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginsendOrder(string Order, bool replacement, string orderedItems, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[3];
            _args[0] = Order;
            _args[1] = replacement;
            _args[2] = orderedItems;
            System.IAsyncResult _result = base.BeginInvoke("sendOrder", _args, callback, asyncState);
            return _result;
        }
        
        public string EndsendOrder(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("sendOrder", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BegincopyCategories(string category, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = category;
            System.IAsyncResult _result = base.BeginInvoke("copyCategories", _args, callback, asyncState);
            return _result;
        }
        
        public void EndcopyCategories(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            base.EndInvoke("copyCategories", _args, result);
        }
        
        public System.IAsyncResult BegincopyItems(string items, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = items;
            System.IAsyncResult _result = base.BeginInvoke("copyItems", _args, callback, asyncState);
            return _result;
        }
        
        public void EndcopyItems(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            base.EndInvoke("copyItems", _args, result);
        }
        
        public System.IAsyncResult BegingetAllItems(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("getAllItems", _args, callback, asyncState);
            return _result;
        }
        
        public string EndgetAllItems(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("getAllItems", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BegingetAllCategories(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("getAllCategories", _args, callback, asyncState);
            return _result;
        }
        
        public string EndgetAllCategories(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("getAllCategories", _args, result)));
            return _result;
        }
    }
}
